// <auto-generated />
using System;
using HospitalAssessment.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalAssessment.Server.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20240129180402_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.24");

            modelBuilder.Entity("HospitalAssessment.Server.Data.DataModels.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("PatientId");

                    b.HasIndex("TenantId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            City = "Che",
                            CreatedAt = new DateTime(2024, 1, 29, 23, 34, 2, 759, DateTimeKind.Local).AddTicks(8988),
                            FirstName = "Potter",
                            IsDeleted = false,
                            LastName = "Harry",
                            State = "St",
                            TenantId = 1
                        },
                        new
                        {
                            PatientId = 2,
                            City = "Beng",
                            CreatedAt = new DateTime(2024, 1, 29, 23, 34, 2, 759, DateTimeKind.Local).AddTicks(9004),
                            FirstName = "Hermoine",
                            IsDeleted = false,
                            LastName = "Gi",
                            State = "Ka",
                            TenantId = 1
                        },
                        new
                        {
                            PatientId = 3,
                            City = "Mi",
                            CreatedAt = new DateTime(2024, 1, 29, 23, 34, 2, 759, DateTimeKind.Local).AddTicks(9008),
                            FirstName = "Voltmore",
                            IsDeleted = false,
                            LastName = "Vi",
                            State = "Mp",
                            TenantId = 1
                        },
                        new
                        {
                            PatientId = 4,
                            City = "Tru",
                            CreatedAt = new DateTime(2024, 1, 29, 23, 34, 2, 759, DateTimeKind.Local).AddTicks(9010),
                            FirstName = "Ginger",
                            IsDeleted = false,
                            LastName = "Mi",
                            State = "Kl",
                            TenantId = 1
                        },
                        new
                        {
                            PatientId = 5,
                            City = "Tru",
                            CreatedAt = new DateTime(2024, 1, 29, 23, 34, 2, 759, DateTimeKind.Local).AddTicks(9013),
                            FirstName = "Benji",
                            IsDeleted = false,
                            LastName = "Fr",
                            State = "Ap",
                            TenantId = 1
                        });
                });

            modelBuilder.Entity("HospitalAssessment.Server.Data.DataModels.PatientProgressNote", b =>
                {
                    b.Property<int>("ProgressNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SectionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VisitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProgressNoteId");

                    b.HasIndex("VisitId");

                    b.ToTable("PatientProgressNotes");
                });

            modelBuilder.Entity("HospitalAssessment.Server.Data.DataModels.PatientVisit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("TEXT");

                    b.HasKey("VisitId");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientVisits");
                });

            modelBuilder.Entity("HospitalAssessment.Server.Data.DataModels.Tenant", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TenantId");

                    b.ToTable("Tenants");

                    b.HasData(
                        new
                        {
                            TenantId = 1,
                            TenantName = "Alpha"
                        },
                        new
                        {
                            TenantId = 2,
                            TenantName = "Beta"
                        },
                        new
                        {
                            TenantId = 3,
                            TenantName = "Gamma"
                        });
                });

            modelBuilder.Entity("HospitalAssessment.Server.Data.DataModels.Patient", b =>
                {
                    b.HasOne("HospitalAssessment.Server.Data.DataModels.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("HospitalAssessment.Server.Data.DataModels.PatientProgressNote", b =>
                {
                    b.HasOne("HospitalAssessment.Server.Data.DataModels.PatientVisit", "PatientVisit")
                        .WithMany("ProgressNotes")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientVisit");
                });

            modelBuilder.Entity("HospitalAssessment.Server.Data.DataModels.PatientVisit", b =>
                {
                    b.HasOne("HospitalAssessment.Server.Data.DataModels.Patient", "Patient")
                        .WithMany("Visits")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalAssessment.Server.Data.DataModels.Patient", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("HospitalAssessment.Server.Data.DataModels.PatientVisit", b =>
                {
                    b.Navigation("ProgressNotes");
                });
#pragma warning restore 612, 618
        }
    }
}
